# Smart Display 開発共通ルール

## 必須実行ルール
1. **ultrathink**: 作業開始前に必ず ultrathink を実行し、タスクを分析・計画する
2. **型安全性**: TypeScript の型定義を厳密に使用し、any型の使用を避ける
3. **既存コード調査**: 新機能追加前に既存のコードスタイルとパターンを確認する
4. **エラーハンドリング**: 適切なエラーハンドリングとユーザーフィードバックを実装する
5. **セキュリティ**: 機密情報の漏洩やXSS脆弱性を防ぐセキュアな実装を行う

## プロジェクト構造の理解
- **frontend/**: React 18 + TypeScript + Vite + Tailwind CSS
- **backend/**: Node.js + Express + TypeScript + Socket.io
- **shared/**: フロントエンドとバックエンドで共有する型定義
- 既存のフォルダ構造とファイル命名規則に従う

## コーディング規約
- ESLint ルールの遵守
- Prettier による自動フォーマット
- セマンティックなコミットメッセージ
- 適切なコメントとドキュメント

## パフォーマンス
- React の再レンダリング最適化
- 適切なメモ化の使用
- バンドルサイズの考慮
- APIレスポンス時間の最適化

## 品質保証
- 作業完了後は必ず lint と typecheck を実行
- 既存機能への影響を確認
- 可能な限りテストケースを追加

## UI/UX
- Liquid Glass エフェクトのデザイン統一
- レスポンシブ対応
- アクセシビリティ考慮
- 直感的なユーザーインターフェース